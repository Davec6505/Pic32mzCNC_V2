@startuml
!theme cerulean
title Timer Architecture - TMR1 + OCR Modules

' ============================================================================
' TIMER HIERARCHY
' ============================================================================
package "Timer Hierarchy" {
  component "TMR1\n1kHz\n(Motion Control)" as TMR1 #LightGreen
  component "TMR2\n(X-axis OCR)" as TMR2 #LightBlue
  component "TMR3\n(Z-axis OCR)" as TMR3 #LightBlue
  component "TMR4\n(Y-axis OCR)" as TMR4 #LightBlue
  component "TMR5\n(A-axis OCR)" as TMR5 #LightBlue
  
  note right of TMR1
    **Motion Control Timer**:
    Frequency: 1kHz (1ms period)
    Clock: 1.5625MHz (25MHz / 16 prescaler)
    Purpose: S-curve state machine
    ISR: TMR1_MultiAxisControl()
    
    **Responsibilities**:
    * Update elapsed time
    * Calculate current velocity
    * Update OCR periods
    * Check motion complete
  end note
  
  note right of TMR2
    **OCR Time Base Timers**:
    Frequency: Variable (velocity-dependent)
    Clock: 1.5625MHz (25MHz / 16 prescaler)
    Purpose: Generate step pulse timing
    
    **Period Calculation**:
    period = TMR_CLOCK_HZ / velocity_steps_sec
    period = 1,562,500 / velocity_steps_sec
    
    **Example** (100 steps/sec):
    period = 1,562,500 / 100 = 15,625 counts
    time = 15,625 / 1.5625MHz = 10ms per step
    
    **Range** (16-bit timer):
    Min: 23.8 steps/sec (period 65,535)
    Max: 31,250 steps/sec (period 50)
    
    **Assignment** (per MCC):
    * TMR2 → OCMP4 (X-axis)
    * TMR3 → OCMP5 (Z-axis)
    * TMR4 → OCMP1 (Y-axis)
    * TMR5 → OCMP3 (A-axis)
  end note
}

' ============================================================================
' OCR MODULES
' ============================================================================
package "OCR Modules (Output Compare)" {
  component "OCMP1\n(Y-axis)" as OCMP1 #Gold
  component "OCMP3\n(A-axis)" as OCMP3 #Gold
  component "OCMP4\n(X-axis)" as OCMP4 #Gold
  component "OCMP5\n(Z-axis)" as OCMP5 #Gold
  
  note right of OCMP4
    **Dual-Compare PWM Mode**:
    
    **Registers**:
    * TMRxPR = period (rollover)
    * OCxR = period - 40 (rising edge)
    * OCxRS = 40 (falling edge)
    
    **Pulse Width**: 40 counts
    * Time: 40 / 1.5625MHz = 25.6µs
    * DRV8825 requires: ≥ 1.9µs ✓
    
    **Example** (period = 15,625):
    * Frequency: 1.5625MHz / 15,625 = 100 Hz
    * Step rate: 100 steps/second
    * Pin HIGH: 40 counts (25.6µs)
    * Pin LOW: 15,585 counts (9.974ms)
  end note
}

' ============================================================================
' GPIO OUTPUTS
' ============================================================================
package "GPIO Outputs" {
  component "STEP_X\n(Pin RB3)" as StepX
  component "STEP_Y\n(Pin RG0)" as StepY
  component "STEP_Z\n(Pin RB5)" as StepZ
  component "STEP_A\n(Pin RE5)" as StepA
  
  component "DIR_X\n(Pin RB15)" as DirX
  component "DIR_Y\n(Pin RG1)" as DirY
  component "DIR_Z\n(Pin RB4)" as DirZ
  component "DIR_A\n(Pin RE6)" as DirA
  
  note right of StepX
    **STEP Pins**:
    Driven by OCR hardware
    Pulse width: 40 timer counts
    Frequency: Varies with velocity
    
    **DIR Pins**:
    Controlled by software (GPIO_PinWrite)
    Set BEFORE step pulses start
    Stable during motion
  end note
}

' ============================================================================
' DRV8825 DRIVERS
' ============================================================================
package "DRV8825 Stepper Drivers" {
  component "X-Driver" as DrvX
  component "Y-Driver" as DrvY
  component "Z-Driver" as DrvZ
  component "A-Driver" as DrvA
}

' ============================================================================
' CONNECTIONS - Timers to OCR
' ============================================================================
TMR2 -down-> OCMP4 : Time base
TMR3 -down-> OCMP5 : Time base
TMR4 -down-> OCMP1 : Time base
TMR5 -down-> OCMP3 : Time base

' ============================================================================
' CONNECTIONS - OCR to GPIO
' ============================================================================
OCMP4 -down-> StepX : PWM output
OCMP1 -down-> StepY : PWM output
OCMP5 -down-> StepZ : PWM output
OCMP3 -down-> StepA : PWM output

' ============================================================================
' CONNECTIONS - GPIO to Drivers
' ============================================================================
StepX -down-> DrvX : STEP signal
DirX -down-> DrvX : DIR signal
StepY -down-> DrvY : STEP signal
DirY -down-> DrvY : DIR signal
StepZ -down-> DrvZ : STEP signal
DirZ -down-> DrvZ : DIR signal
StepA -down-> DrvA : STEP signal
DirA -down-> DrvA : DIR signal

' ============================================================================
' CONTROL FLOW - TMR1 to OCR
' ============================================================================
TMR1 -[#Red,dashed]down-> TMR2 : <color:Red>TMR2_PeriodSet()</color>
TMR1 -[#Red,dashed]down-> TMR3 : <color:Red>TMR3_PeriodSet()</color>
TMR1 -[#Red,dashed]down-> TMR4 : <color:Red>TMR4_PeriodSet()</color>
TMR1 -[#Red,dashed]down-> TMR5 : <color:Red>TMR5_PeriodSet()</color>

OCMP4 -[#Blue,dashed]up-> TMR1 : <color:Blue>Step count callback</color>
OCMP1 -[#Blue,dashed]up-> TMR1 : <color:Blue>Step count callback</color>
OCMP5 -[#Blue,dashed]up-> TMR1 : <color:Blue>Step count callback</color>
OCMP3 -[#Blue,dashed]up-> TMR1 : <color:Blue>Step count callback</color>

' ============================================================================
' TIMING EXAMPLE
' ============================================================================
note bottom
  **Timing Example**:
  
  Time 0ms:  TMR1 ISR → Velocity = 100 steps/sec → OCR Period = 15,625 counts (10ms)
  Time 1ms:  TMR1 ISR → Velocity = 150 steps/sec → OCR Period = 10,417 counts (6.67ms)
  Time 2ms:  TMR1 ISR → Velocity = 200 steps/sec → OCR Period = 7,813 counts (5ms)
  Time 3ms:  TMR1 ISR → Velocity = 250 steps/sec → OCR Period = 6,250 counts (4ms)
  
  **Calculation**: period = 1,562,500 Hz / (steps/sec)
  **Result**: Smooth velocity ramp from 100 to 250 steps/sec over 3ms
  STEP_X pin frequency increases proportionally
end note

' ============================================================================
' LEGEND
' ============================================================================
legend right
  **Timer Clocking**:
  * Peripheral Clock: 25MHz
  * Prescaler: 1:16 (all OCR timers)
  * Timer Clock: 1.5625MHz
  * Resolution: 640ns per count
  
  **TMR1 Configuration**:
  * Period: 1562 counts (1ms @ 1.5625MHz)
  * Frequency: 1kHz
  * Priority: High (ISR critical)
  
  **OCR Configuration**:
  * Mode: Dual-Compare PWM
  * Min Period: 50 counts (32µs, 31,250 steps/sec max)
  * Max Period: 65,485 counts (41.91ms, 23.8 steps/sec min)
  * Pulse Width: 40 counts (25.6µs)
  
  **DRV8825 Requirements**:
  * Min STEP pulse: 1.9µs
  * Our pulse: 25.6µs (13.5x safety margin!)
  * DIR setup time: 200ns (GPIO provides)
  
  **Control Paths**:
  * <color:Red>Red Dashed</color> = TMR1 updates OCR periods
  * <color:Blue>Blue Dashed</color> = OCR callbacks to TMR1
  
  **Key Benefits**:
  ✅ Hardware generates pulses (no CPU load)
  ✅ TMR1 only updates rates (1kHz manageable)
  ✅ Independent per-axis timing
  ✅ Smooth velocity changes (every 1ms)
  ✅ 16-bit timer fits all speeds (23.8 - 31,250 steps/sec)
end legend

@enduml
